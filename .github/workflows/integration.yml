name: 테스트 & 통합

on:
  push:
    branches:
      - develop

env:
  JAVA_PATH: /home/runner/jdk
  GRADLE_USER_HOME: /home/runner/gradle

run-name: '[테스트 & 통합] For "${{ github.event.head_commit.message }}"'

jobs:
  gradle-test:
    name: 그래들 테스트
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: dailyquest_test
          MYSQL_USER: sa
          MYSQL_PASSWORD: sa
        ports:
          - 3306:3306
      redis:
        image: redis:7.0
        ports:
          - 6379:6379
    steps:
      - name: 리포지토리 체크아웃
        uses: actions/checkout@v3

      - name: 레디스 초기 데이터 셋업
        run: |
          sudo apt-get update
          sudo apt-get install redis-tools
          chmod +x ./script/redis_init.sh
          ./script/redis_init.sh

      - id: java-checksum-setup
        name: 자바 캐시용 체크섬 셋업
        run: |
          mkdir -p ${{ env.JAVA_PATH }}
          echo "java_checksum=$(curl https://corretto.aws/downloads/latest_checksum/amazon-corretto-17-x64-linux-jdk.tar.gz)" >> "$GITHUB_OUTPUT"
      - id: java-cache-check
        name: 캐싱된 자바 확인
        uses: actions/cache@v3
        with:
          key: java-corretto-17-${{ steps.java-checksum-setup.outputs.java_checksum }}
          path: ${{ env.JAVA_PATH }}
      - id: jdk-install
        if: ${{ !steps.java-cache-check.outputs.cache-hit }}
        name: 자바 설치
        run: |
          mkdir -p ${{ env.JAVA_PATH }}
          wget -q https://corretto.aws/downloads/latest/amazon-corretto-17-x64-linux-jdk.tar.gz
          tar -xzvf *-jdk.tar.gz -C ${{ env.JAVA_PATH }}
      - name: 자바 환경변수 세팅
        run: |
          echo "JAVA_HOME=$(find ${{ env.JAVA_PATH }} -type d -name '*corretto-17*')" >> $GITHUB_ENV

      - name: 그래들 래퍼 버전 셋업
        id: gradle-version-setup
        run: |
          mkdir -p ${{ env.GRADLE_USER_HOME }}
          echo "gradle_version=$(grep 'distributionUrl' ./gradle/wrapper/gradle-wrapper.properties | sed -n 's/.*distributions\/\(gradle-[^-]*-[^-]*\).*/\1/p')" >> $GITHUB_OUTPUT
      - name: 그래들 래퍼 캐시 체크
        id: gradle-wrapper-cache
        uses: actions/cache@v3
        with:
          key: gradle-wrapper-${{ steps.gradle-version-setup.outputs.gradle_version }}
          path: ${{ env.GRADLE_USER_HOME }}/wrapper
      - name: 그래들 디펜던시 캐시 체크
        id: gradle-dependency-cache
        uses: actions/cache@v3
        with:
          key: gradle-dependency-${{ hashFiles('**/build.gradle') }}
          path: ${{ env.GRADLE_USER_HOME }}/caches
      - name: 그래들 테스트
        run: |
          ./gradlew test

  fail-slack-message:
    name: 파이프라인 실패 알림
    runs-on: ubuntu-latest
    needs: gradle-test
    if: failure()
    steps:
      - name: 실패 메시지 가공
        id: create-message
        run: |
          MESSAGE=$(echo "${{ github.event.head_commit.message }}" | head -n 1)
          echo "message=$MESSAGE" > "$GITHUB_OUTPUT"
      - name: 슬랙 메시지 전송
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "<!channel> ❗️[테스트 & 통합] Failure: For \"${{ steps.create-message.outputs.message }}\""
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
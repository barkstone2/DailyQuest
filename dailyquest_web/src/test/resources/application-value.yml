quest:
  page:
    size: 20

security:
  url:
    allowed_url: ["/", "/css/**", "/js/**", "/image/**", "/error", "/api/v1/auth/**"]
    admin_url: ["/admin/**"]
    logout_url: "/api/v1/auth/logout"
  origin:
    allowed_origin: ["http://localhost:9090", "https://dailyquest.mooo.com", "http://localhost:9080"]
  key:
    internal_api_key: "local-api-key"

spring:
  jwt:
    secret: and0LWF1dGhlbnRpY2F0aW9uLWZpbHRlci10ZXN0LXNlY3JldC1rZXQtMDAwMA==

google:
  client-id: ${GOOGLE_CLIENT_ID:test-client-id}

redis:
  key:
    exp_table: "et"
    nickname_prefix: "npr"
    nickname_postfix: "npo"
    settings: "s"
    quest_clear_exp: "qce"
    quest_clear_gold: "qcg"
    max_reward_count: "mrc"

elastic:
  username: ${ELASTIC_USERNAME:elastic}
  password: ${ELASTIC_PASSWORD:changeit}
  host: ${ELASTIC_HOST:localhost}
  port: ${ELASTIC_PORT:9205}
  truststore:
    location: ${ELASTIC_TRUSTSTORE_LOCATION:src/test/resources/test-keystore/test-ca.p12}
    password: ${ELASTIC_TRUSTSTORE_PASSWORD:changeit}

jwt:
  access_token_validation_millisecond_string: ${ACCESS_TOKEN_VALIDATION_MILLISECOND:100000}
  refresh_token_validation_millisecond_string: ${REFRESH_TOKEN_VALIDATION_MILLISECOND:1000000}
  access_token_name: ${ACCESS_TOKEN_NAME:access}
  refresh_token_name: ${REFRESH_TOKEN_NAME:refresh}

api:
  batch:
    server-protocol: ${BATCH_SERVER_PROTOCOL:http}
    server-address: ${BATCH_API_SERVER_URL:localhost}
    server-port: ${BATCH_API_SERVER_PORT:8181}
    key: ${BATCH_API_KEY:local-api-key}
    key-header-name: ${BATCH_API_HEADER_NAME:Batch-API-Key}
    url:
      check-and-achieve: ${BATCH_API_URL_CHECK_AND_ACHIEVE:/api/v1/check-and-achieve}

http:
  response:
    date-format: ${HTTP_RESPONSE_DATE_FORMAT:yyyy-MM-dd}
    time-format: ${HTTP_RESPONSE_TIME_FORMAT:HH:mm:ss}
    date-time-format: ${HTTP_RESPONSE_DATE_TIME_FORMAT:yyyy-MM-dd HH:mm:ss}
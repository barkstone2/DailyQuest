plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'

    /* kotlin */
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id "org.jetbrains.kotlin.kapt" version "1.8.0"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.8.0"
    id "org.jetbrains.kotlin.plugin.spring" version "1.8.0"
}

ext {
    queryDslVersion = '5.0.0'
    testContainersVersion = '1.19.1'
}

allprojects {
    afterEvaluate {
        group = 'dailyquest'

        repositories {
            mavenCentral()
        }

        test.useJUnitPlatform()

        dependencies {
            // 테스트 의존성
            testImplementation 'org.springframework.boot:spring-boot-starter-test'
        }
    }
}

subprojects {
    afterEvaluate {
        dependencies {
            // 롬복 의존성
            compileOnly 'org.projectlombok:lombok'
            annotationProcessor 'org.projectlombok:lombok'

            testCompileOnly 'org.projectlombok:lombok'
            testAnnotationProcessor 'org.projectlombok:lombok'

            // 모킹
            testImplementation 'org.mockito:mockito-inline:3.6.0'

            // 코틀린 모킹
            testImplementation("org.mockito.kotlin:mockito-kotlin:4.1.0")
        }

        kotlin {
            jvmToolchain(17)
        }

        kapt {
            keepJavacAnnotationProcessors = true
        }

        tasks.withType(Jar).configureEach {
            duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        }
    }
}

project(':dailyquest_web') {
    afterEvaluate {
        dependencies {
            implementation(project(':dailyquest_domain'))
            implementation(project(':dailyquest_elastic'))
        }
        test {
            dependsOn(':dailyquest_domain:test')
        }
    }
}

project(':dailyquest_batch') {
    afterEvaluate {
        dependencies {
            implementation(project(':dailyquest_domain'))
            implementation(project(':dailyquest_elastic'))
        }
        test {
            dependsOn(':dailyquest_domain:test')
        }
    }
}
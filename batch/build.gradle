plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'

    id 'org.jetbrains.kotlin.jvm'
    id "org.jetbrains.kotlin.kapt"
    id "org.jetbrains.kotlin.plugin.spring"
    id "org.jetbrains.kotlin.plugin.jpa"
}

dependencies {
    implementation(project(":achievement"))
    implementation(project(":user"))
    implementation(project(':domain'))
    implementation(project(':elastic'))
    implementation(project(':jpa-common'))
    implementation(project(':sqs'))

    // 개발 환경 런타임
    runtimeOnly('com.mysql:mysql-connector-j')
    // 운영 환경 런타임
    runtimeOnly('org.mariadb.jdbc:mariadb-java-client')

    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    // KClass 호출을 위한 kotlin-reflecet
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta")
    kapt ("com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")

    // 테스트 DB
    testRuntimeOnly 'com.h2database:h2'
    // 배치 테스트
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation(project(":opensearch-test"))
}

test {
    dependsOn(":achievement:test")
    dependsOn(":user:test")
    dependsOn(':domain:test')
    dependsOn(':elastic:test')
    dependsOn(":jpa-common:test")
}